<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>罗泽勋</title>
    <link>/post/</link>
    <description>Recent content on 罗泽勋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 07 Mar 2022 12:22:40 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 Java 到 Qt/C&#43;&#43; 的一些经验总结</title>
      <link>/post/2022/03/07/java2c-/</link>
      <pubDate>Mon, 07 Mar 2022 12:22:40 +0800</pubDate>
      
      <guid>/post/2022/03/07/java2c-/</guid>
      <description>C/C++ 代码编译成可执行程序的过程 预处理 进行宏定义展开、头文件展开、条件编译，不检查语法。 gcc -E demo1.c -o demo1.i 编译 检查语法，将预处理过的文件编译生成汇编文件</description>
    </item>
    
    <item>
      <title>Marp：使用 Markdown 创建漂亮的幻灯片</title>
      <link>/post/2022/02/28/marp%E4%BD%BF%E7%94%A8-markdown-%E5%88%9B%E5%BB%BA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%B9%BB%E7%81%AF%E7%89%87/</link>
      <pubDate>Mon, 28 Feb 2022 14:17:47 +0800</pubDate>
      
      <guid>/post/2022/02/28/marp%E4%BD%BF%E7%94%A8-markdown-%E5%88%9B%E5%BB%BA%E6%BC%82%E4%BA%AE%E7%9A%84%E5%B9%BB%E7%81%AF%E7%89%87/</guid>
      <description>简介 Marp（Markdown Presentation Ecosystem）为创建漂亮的幻灯片提供了直观的体验。 你只需要专注于在 Markdown 文档中写你的故事。 安装使用 Marp 有两个</description>
    </item>
    
    <item>
      <title>由 hpp 头文件引发 C&#43;&#43; 编译的思考</title>
      <link>/post/2021/12/26/hpp/</link>
      <pubDate>Sun, 26 Dec 2021 12:55:54 +0800</pubDate>
      
      <guid>/post/2021/12/26/hpp/</guid>
      <description>前一阵子，我注意到一位项目组新成员喜欢使用 hpp 头文件的方式来写，他解释说很多开源库都是以这样的方式实现，还问我 hpp 头文件和 h + cpp 方式的区别。这个</description>
    </item>
    
    <item>
      <title>设计模式概述</title>
      <link>/post/2021/12/26/design/</link>
      <pubDate>Sun, 26 Dec 2021 10:10:12 +0800</pubDate>
      
      <guid>/post/2021/12/26/design/</guid>
      <description>在软件开发生命周期的每一个阶段都存在着一些被认同的模式。 在软件模式中，设计模式是研究最为深入的分支，设计模式用于在特定的调剂爱你下为一些重复</description>
    </item>
    
    <item>
      <title>栈和队列</title>
      <link>/post/2021/12/26/stackqueue/</link>
      <pubDate>Sun, 26 Dec 2021 09:14:03 +0800</pubDate>
      
      <guid>/post/2021/12/26/stackqueue/</guid>
      <description>从数据结构的角度看，栈和队列是操作受限的线性表，栈和队列的数据元素具有单一的前驱和后继的线性关系。 栈 定义：栈是限定仅在表尾进行插入和删除操作</description>
    </item>
    
    <item>
      <title>线性表</title>
      <link>/post/2021/12/16/linearlist/</link>
      <pubDate>Thu, 16 Dec 2021 12:43:02 +0800</pubDate>
      
      <guid>/post/2021/12/16/linearlist/</guid>
      <description>线性表是一种最基本、最简单的数据结构，数据元素之间仅具有单一的前驱和后继关系。 一、线性表的逻辑结构 定义：线性表简称表，是 n(n&amp;gt;=0) 个具有相同类型的数</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 基础总结</title>
      <link>/post/2021/12/15/cppbase/</link>
      <pubDate>Wed, 15 Dec 2021 12:35:27 +0800</pubDate>
      
      <guid>/post/2021/12/15/cppbase/</guid>
      <description>一、语法基础 指针和引用的概念 指针与内存关系 程序编译过程 static、const、#define的用法和区别 C和C++区别 内存模型 内存中的栈和</description>
    </item>
    
    <item>
      <title>修改菜单栏和文章创作</title>
      <link>/post/2021/11/18/%E4%BF%AE%E6%94%B9%E8%8F%9C%E5%8D%95%E6%A0%8F%E5%92%8C%E6%96%87%E7%AB%A0%E5%88%9B%E4%BD%9C/</link>
      <pubDate>Thu, 18 Nov 2021 18:36:33 +0800</pubDate>
      
      <guid>/post/2021/11/18/%E4%BF%AE%E6%94%B9%E8%8F%9C%E5%8D%95%E6%A0%8F%E5%92%8C%E6%96%87%E7%AB%A0%E5%88%9B%E4%BD%9C/</guid>
      <description>前情提要 完成前面的工作后，我们的网站是下图这样的，非常符合极简之美。不过空荡荡的网站不是我们想要的，接下来我们就开始最核心的部分：修改网站内</description>
    </item>
    
    <item>
      <title>搭建</title>
      <link>/post/2021/11/17/%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 17 Nov 2021 19:38:06 +0800</pubDate>
      
      <guid>/post/2021/11/17/%E6%90%AD%E5%BB%BA/</guid>
      <description>一、在本地创建网站 （1）使用 Hugo 建立网站。打开命令窗口，进入 D:\hugo\site 目录（便捷方法：在文件资源管理器中进入相应目录，单击地址栏右边空白地方，在最左边</description>
    </item>
    
    <item>
      <title>准备工作</title>
      <link>/post/2021/11/15/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</link>
      <pubDate>Mon, 15 Nov 2021 12:26:45 +0800</pubDate>
      
      <guid>/post/2021/11/15/%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</guid>
      <description>一、注册 Github 帐号 （1）.前往 github.com 注册一个帐号。（注意：慎重考虑注册的用户名，如果你不购买别的域名，这个用户名将是你网站域名的一部分） （2）在 Github 中</description>
    </item>
    
    <item>
      <title>基础概念</title>
      <link>/post/2021/11/14/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sun, 14 Nov 2021 20:57:13 +0800</pubDate>
      
      <guid>/post/2021/11/14/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</guid>
      <description>教程开始前，先来介绍一下最终的成果，以便确认是否符合你的需求。本篇教程以 Hugo 和 Github Pages 为基础，创建一个静态的网站。这个过程仅需要一台联网的电脑，不</description>
    </item>
    
    <item>
      <title>开篇</title>
      <link>/post/2021/11/14/%E5%BC%80%E7%AF%87/</link>
      <pubDate>Sun, 14 Nov 2021 20:57:13 +0800</pubDate>
      
      <guid>/post/2021/11/14/%E5%BC%80%E7%AF%87/</guid>
      <description>回顾过去，我刚接触互联网时，还是 2G 时代，那时各类论坛博客和聊天室正蓬勃发展。这种跨越时空的交流方式让我感到非常新奇，看着屏幕吐出文字的时候，</description>
    </item>
    
    <item>
      <title>Qt单元测试基础笔记</title>
      <link>/post/2021/10/13/qt%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 13 Oct 2021 07:01:19 +0800</pubDate>
      
      <guid>/post/2021/10/13/qt%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</guid>
      <description>一、构建 构建时添加 QT += testlib 。 二、测试类 测试类必须从 QObject 继承，头文件 include &amp;lt;QTest&amp;gt; ，并将测试函数声明 private slot 三、QVERIFY(condition) 宏 检查 con</description>
    </item>
    
    <item>
      <title>开发指南-未完待续</title>
      <link>/post/2021/07/16/%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/</link>
      <pubDate>Fri, 16 Jul 2021 14:24:34 +0800</pubDate>
      
      <guid>/post/2021/07/16/%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD/</guid>
      <description>提高质量和生产率是软件工程要解决的核心问题。 软件开发：正确性、健壮性、可靠性、效率、易用性、可读性（可理解性）、可扩展性、可复用性、兼容性、</description>
    </item>
    
    <item>
      <title>vim 操作备忘</title>
      <link>/post/2021/07/10/vim-%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98/</link>
      <pubDate>Sat, 10 Jul 2021 10:35:46 +0800</pubDate>
      
      <guid>/post/2021/07/10/vim-%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98/</guid>
      <description>一、存活 操作 含义 i Insert 模式，按 ESC 回到 Normal 模式。 x 删除当前光标所在的一个字符。 :wq 保存退出 dd 删除当前行，并存到剪切板 p 粘贴剪切板 hjkl 左下上右 :help 显示相关</description>
    </item>
    
    <item>
      <title>从零开始搭建个人网站——小白篇</title>
      <link>/post/2021/06/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%B0%8F%E7%99%BD%E7%AF%87/</link>
      <pubDate>Tue, 01 Jun 2021 06:16:32 +0800</pubDate>
      
      <guid>/post/2021/06/01/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%B0%8F%E7%99%BD%E7%AF%87/</guid>
      <description>前言 小白篇和前面正经篇的区别是，懒人篇专门针对基础更浅（或者更懒的）朋友而设计，在这里不会新建一个网站，而是下载我预先准备好的示例网站，在这</description>
    </item>
    
    <item>
      <title>【规约】 C&#43;&#43; 编程篇</title>
      <link>/post/2021/05/28/%E8%A7%84%E7%BA%A6-c-%E7%BC%96%E7%A8%8B%E7%AF%87/</link>
      <pubDate>Fri, 28 May 2021 11:46:44 +0800</pubDate>
      
      <guid>/post/2021/05/28/%E8%A7%84%E7%BA%A6-c-%E7%BC%96%E7%A8%8B%E7%AF%87/</guid>
      <description>前言 “码出高效，码出质量”。本文整理了比较常见的 C++ 编程规范，主要来源于华为《软件编程规范总则》。 （一）排版 1.程序块要采用缩进风格编写，缩进</description>
    </item>
    
    <item>
      <title>【规约】 Java 编程篇</title>
      <link>/post/2021/05/28/%E8%A7%84%E7%BA%A6-java-%E7%BC%96%E7%A8%8B%E7%AF%87/</link>
      <pubDate>Fri, 28 May 2021 10:36:40 +0800</pubDate>
      
      <guid>/post/2021/05/28/%E8%A7%84%E7%BA%A6-java-%E7%BC%96%E7%A8%8B%E7%AF%87/</guid>
      <description>前言 “码出高效，码出质量”。本文整理了比较常见的 Java 编程规范，主要来源于《阿里巴巴 Java 开发手册》。 （一）命名风格 1.【强制】类名使用 UpperC</description>
    </item>
    
    <item>
      <title>【规约】 MySQL 数据库篇</title>
      <link>/post/2021/05/28/%E8%A7%84%E7%BA%A6-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/</link>
      <pubDate>Fri, 28 May 2021 09:03:51 +0800</pubDate>
      
      <guid>/post/2021/05/28/%E8%A7%84%E7%BA%A6-mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AF%87/</guid>
      <description>前言 “码出高效，码出质量”。本文整理了比较常见的 MySQL 数据库编程规范，主要来源于《阿里巴巴 Java 开发手册》。 (一)建表规约 1.【强制】表达是与否概念</description>
    </item>
    
    <item>
      <title>[做点有趣的]C&#43;&#43;做一个哈夫曼压缩软件</title>
      <link>/post/2021/05/25/%E5%81%9A%E7%82%B9%E6%9C%89%E8%B6%A3%E7%9A%84c-%E5%81%9A%E4%B8%80%E4%B8%AA%E5%93%88%E5%A4%AB%E6%9B%BC%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 25 May 2021 07:12:32 +0800</pubDate>
      
      <guid>/post/2021/05/25/%E5%81%9A%E7%82%B9%E6%9C%89%E8%B6%A3%E7%9A%84c-%E5%81%9A%E4%B8%80%E4%B8%AA%E5%93%88%E5%A4%AB%E6%9B%BC%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</guid>
      <description>前言 这是以前的一个实训周作业，核心是哈夫曼编码和解码，软件界面由 QT 实现。代码量很小，比较简单。 源代码： https://gitee.com/lzxqaq/zxhan.git 介绍：https://lzxqaq.</description>
    </item>
    
    <item>
      <title>[做点有趣的]Java开发泡泡堂游戏（MVC架构）</title>
      <link>/post/2021/05/08/%E5%81%9A%E7%82%B9%E6%9C%89%E8%B6%A3%E7%9A%84java%E5%BC%80%E5%8F%91%E6%B3%A1%E6%B3%A1%E5%A0%82%E6%B8%B8%E6%88%8Fmvc%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 08 May 2021 11:09:51 +0800</pubDate>
      
      <guid>/post/2021/05/08/%E5%81%9A%E7%82%B9%E6%9C%89%E8%B6%A3%E7%9A%84java%E5%BC%80%E5%8F%91%E6%B3%A1%E6%B3%A1%E5%A0%82%E6%B8%B8%E6%88%8Fmvc%E6%9E%B6%E6%9E%84/</guid>
      <description>介绍 本项目是一个很久以前的实训周项目，由我和我的组员 ljr 共同实现。整个项目思路清晰，整体难度不大，但是很多细节需要花功夫。本项目仍存在一些不足</description>
    </item>
    
    <item>
      <title>从零开始搭建个人网站（win10,Github,Hugo）</title>
      <link>/post/2021/02/18/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99win10githubhugo/</link>
      <pubDate>Thu, 18 Feb 2021 09:03:38 +0800</pubDate>
      
      <guid>/post/2021/02/18/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99win10githubhugo/</guid>
      <description>准备工作 1.注册 Github 帐号。前往 github.com 注册一个 Github 帐号。（友情提示：认真考虑注册时的用户名，它将是网址的一部分） 补充：Github 是一个代码托管平台（</description>
    </item>
    
    <item>
      <title>Java I/O</title>
      <link>/post/2021/01/12/java-i/o/</link>
      <pubDate>Tue, 12 Jan 2021 08:46:08 +0800</pubDate>
      
      <guid>/post/2021/01/12/java-i/o/</guid>
      <description>一、概览 Java 的 I/O 大概可以分成以下几类： 磁盘操作：File 字节操作：InputStream 和 OutputStream 对象操作：Serializable 网络操作：Soc</description>
    </item>
    
    <item>
      <title>Java 并发</title>
      <link>/post/2021/01/09/java-%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Sat, 09 Jan 2021 10:50:16 +0800</pubDate>
      
      <guid>/post/2021/01/09/java-%E5%B9%B6%E5%8F%91/</guid>
      <description>一、使用线程 有三种使用线程的方法： 实现 Runnable 接口； 实现 Callable接口； 继承 Tread 类； 实现 Runnable 接口 需要实现接口中的 run() 方法。 public class MyRunnable implements Runnable { @Override public void run(){ // ...</description>
    </item>
    
    <item>
      <title>Linux 不同发行版的选择</title>
      <link>/post/2020/12/26/linux-%E4%B8%8D%E5%90%8C%E5%8F%91%E8%A1%8C%E7%89%88%E7%9A%84%E9%80%89%E6%8B%A9/</link>
      <pubDate>Sat, 26 Dec 2020 22:33:13 +0800</pubDate>
      
      <guid>/post/2020/12/26/linux-%E4%B8%8D%E5%90%8C%E5%8F%91%E8%A1%8C%E7%89%88%E7%9A%84%E9%80%89%E6%8B%A9/</guid>
      <description>如果你对 Linux 感兴趣但还不了解，想知道 Linux 的不同发行版之间的区别，我的这些经历应该对你有帮助。 我最初使用的是 Ubuntu，它以前经常被推荐为 Linux 入门</description>
    </item>
    
    <item>
      <title>String 类真的不可以改变吗？</title>
      <link>/post/2020/12/15/string-%E7%B1%BB%E7%9C%9F%E7%9A%84%E4%B8%8D%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E5%90%97/</link>
      <pubDate>Tue, 15 Dec 2020 15:05:27 +0800</pubDate>
      
      <guid>/post/2020/12/15/string-%E7%B1%BB%E7%9C%9F%E7%9A%84%E4%B8%8D%E5%8F%AF%E4%BB%A5%E6%94%B9%E5%8F%98%E5%90%97/</guid>
      <description>对于 java.lang.String 类，我相信很多人印象里都是它不能被改变。通过查看源码，可以知道 String 有一个 final char 数组的变量，这个变量初始化之后便不能重新赋值。虽然这个变量引</description>
    </item>
    
  </channel>
</rss>
