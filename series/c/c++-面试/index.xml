<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C/C&#43;&#43; 面试 on 罗泽勋</title>
    <link>/series/c/c&#43;&#43;-%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in C/C&#43;&#43; 面试 on 罗泽勋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language><atom:link href="/series/c/c++-%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【转载】Linux Socket 编程（不限 Linux）</title>
      <link>/collection/linuxsocket/</link>
      <pubDate>Mon, 07 Mar 2022 18:43:02 +0800</pubDate>
      
      <guid>/collection/linuxsocket/</guid>
      <description>作者：吴秦 出处：(http://www.cnblogs.com/skynet/) 1、网络中进程之间如何通信？ 本地的进程间通信（IPC）有很多</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之网络编程</title>
      <link>/collection/networkpg/</link>
      <pubDate>Mon, 07 Mar 2022 18:38:17 +0800</pubDate>
      
      <guid>/collection/networkpg/</guid>
      <description>转载自https://github.com/huihut/interview Socket Linux Socket 编程（不限 Linux） Socket 中的 read()、write() 函</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之设计模式</title>
      <link>/collection/design-pattern/</link>
      <pubDate>Sat, 15 Jan 2022 08:14:07 +0800</pubDate>
      
      <guid>/collection/design-pattern/</guid>
      <description>转载自https://github.com/huihut/interview 各大设计模式例子参考：CSDN专栏 . C++ 设计模式 系列博文 设计模式工</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之链接装载库</title>
      <link>/collection/library/</link>
      <pubDate>Sat, 15 Jan 2022 08:10:50 +0800</pubDate>
      
      <guid>/collection/library/</guid>
      <description>转载自https://github.com/huihut/interview 本节部分知识点来自《程序员的自我修养——链接装载库》 内存、栈、堆</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之数据库</title>
      <link>/collection/database/</link>
      <pubDate>Sat, 15 Jan 2022 08:08:34 +0800</pubDate>
      
      <guid>/collection/database/</guid>
      <description>转载自https://github.com/huihut/interview 本节部分知识点来自《数据库系统概论（第 5 版）》 基本概念 数据（da</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之计算机网络</title>
      <link>/collection/network/</link>
      <pubDate>Sat, 15 Jan 2022 08:06:35 +0800</pubDate>
      
      <guid>/collection/network/</guid>
      <description>转载自https://github.com/huihut/interview 本节部分知识点来自《计算机网络（第 7 版）》 计算机网络体系结构： 各</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之操作系统</title>
      <link>/collection/os/</link>
      <pubDate>Fri, 14 Jan 2022 21:02:05 +0800</pubDate>
      
      <guid>/collection/os/</guid>
      <description>转载自https://github.com/huihut/interview 进程与线程 对于有线程系统： 进程是资源分配的独立单位 线程是资源调度</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之算法</title>
      <link>/collection/algorithm/</link>
      <pubDate>Fri, 14 Jan 2022 20:42:19 +0800</pubDate>
      
      <guid>/collection/algorithm/</guid>
      <description>转载自https://github.com/huihut/interview 排序 排序算法 平均时间复杂度 最差时间复杂度 空间复杂度 数据对象稳定性</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之数据结构</title>
      <link>/collection/data-structure/</link>
      <pubDate>Fri, 14 Jan 2022 20:28:54 +0800</pubDate>
      
      <guid>/collection/data-structure/</guid>
      <description>转载自https://github.com/huihut/interview 顺序结构 顺序栈（Sequence Stack） SqStack.cpp 顺序栈数据结构和图</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之 STL</title>
      <link>/collection/c&#43;&#43;stl/</link>
      <pubDate>Fri, 14 Jan 2022 20:23:31 +0800</pubDate>
      
      <guid>/collection/c&#43;&#43;stl/</guid>
      <description>转载自https://github.com/huihut/interview STL 索引 STL 方法含义索引 STL 容器 容器 底层数据结构 时间复杂度 有无序 可不可</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之 Effective C&#43;&#43;</title>
      <link>/collection/effectivec&#43;&#43;/</link>
      <pubDate>Fri, 14 Jan 2022 20:16:02 +0800</pubDate>
      
      <guid>/collection/effectivec&#43;&#43;/</guid>
      <description>转载自https://github.com/huihut/interview Effective C++ 视 C++ 为一个语言联邦（C、Object-Oriented C++</description>
    </item>
    
    <item>
      <title>【转载】C&#43;&#43; 开发必备之 C/C&#43;&#43;基础</title>
      <link>/collection/cc&#43;&#43;base/</link>
      <pubDate>Tue, 11 Jan 2022 23:20:27 +0800</pubDate>
      
      <guid>/collection/cc&#43;&#43;base/</guid>
      <description>转载自https://github.com/huihut/interview const 作用 修饰变量，说明该变量不可以被改变； 修饰指针，分为指向常量的</description>
    </item>
    
  </channel>
</rss>
